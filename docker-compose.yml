services:
  db:
    image: postgres:16.2-bookworm
    restart: unless-stopped
    # Внешний том(volume) и место где он будет подключен внутри контейнера
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "psql --username=${POSTGRES_USER} --dbname=${POSTGRES_DB} -c 'select now();' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:7.4.0-bookworm
    restart: unless-stopped
    expose:
      - 6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
  web:
    build:
      # Берем Dockerfile 
      context: ./
    restart: unless-stopped
    command: bash -c "python manage.py makemigrations
      && python manage.py migrate 
      && python manage.py runserver 0.0.0.0:8000"
    # порт 3000 для debugpy
    ports:
      - 8000:8000
      - 3000:3000
    volumes:
      - type: bind
        source: ./app
        target: /home/${USER}/app/
    # Файл содержащий переменные окружения для контейнера
    env_file:
      - ./.env
    depends_on:
        db:
          condition: service_healthy
        redis:
          condition: service_healthy
  celery:
    build:
      # Берем Dockerfile 
      context: ./
    restart: unless-stopped
    command: bash -c "python -m celery -A book_store worker -l INFO"
    volumes:
      - type: bind
        source: ./app
        target: /home/${USER}/app/
    # Файл содержащий переменные окружения для контейнера
    env_file:
      - ./.env
    depends_on:
        db:
          condition: service_healthy
        redis:
          condition: service_healthy
        web:
          condition: service_started
volumes:
  postgres_volume: