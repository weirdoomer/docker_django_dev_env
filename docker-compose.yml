version: "3.8"

services:
  web:
  # Берем Dockerfile
    build: 
      context: ./
    # command: bash -c "python manage.py flush --no-input
    #   && python manage.py migrate 
    #   && python manage.py runserver 0.0.0.0:8000"
    command: bash -c "python manage.py migrate 
      && python manage.py runserver 0.0.0.0:8000"
    # Открываем порт 8000 внутри и снаружи
    ports:
      - 8000:8000
      - 3000:3000
    volumes:
      - type: bind
        source: ./app
        target: /home/${USER}/app/
    # Файл содержащий переменные окружения для контейнера
    env_file:
      - ./.env
    depends_on:
        db:
          condition: service_healthy
  db:
    image: postgres:16.2-bookworm
    restart: unless-stopped
    # Внешний том(volume) и место где он будет подключен внутри контейнера
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "psql --username=${POSTGRES_USER} --dbname=${POSTGRES_DB} -c 'select now();' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_volume: